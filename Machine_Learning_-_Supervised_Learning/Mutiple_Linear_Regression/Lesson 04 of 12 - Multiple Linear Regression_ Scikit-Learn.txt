MULTIPLE LINEAR REGRESSION
Multiple Linear Regression: Scikit-Learn
Now we have the training set and the test set, let’s use scikit-learn to build the linear regression model!

The steps for multiple linear regression in scikit-learn are identical to the steps for simple linear regression. Just like simple linear regression, we need to import LinearRegression from the linear_model module:

from sklearn.linear_model import LinearRegression
Then, create a LinearRegression model, and then fit it to your x_train and y_train data:

mlr = LinearRegression()

mlr.fit(x_train, y_train) 
# finds the coefficients and the intercept value
We can also use the .predict() function to pass in x-values. It returns the y-values that this plane would predict:

y_predicted = mlr.predict(x_test)
# takes values calculated by `.fit()` and the `x` values, plugs them into the multiple linear regression equation, and calculates the predicted y values. 
We will start by using two of these columns to teach you how to predict the values of the dependent variable, prices.

Instructions
1.
Import LinearRegression from scikit-learn’s linear_model module.


Hint
It should look something like:

from sklearn.linear_model import LinearRegression
2.
Create a Linear Regression model and call it mlr.

Fit the model using x_train and y_train.


Hint
# Create the model
mlr = LinearRegression()

# Fit the model
mlr.fit(x_train, y_train)
3.
Use the model to predict y-values from x_test. Store the predictions in a variable called y_predict.

Now we have:

x_test
x_train
y_test
y_train
and y_predict!

Hint
y_predict = mlr.predict(x_test)
4.
To see this model in action, let’s test it on Sonny’s apartment in Greenpoint, Brooklyn!

Or if you reside in New York, plug in your own apartment’s values and see if you are over or underpaying!


Hint
This is a 1BR/1Bath apartment that is 620 ft². We have pulled together the data for you:

Features	Sonny’s Apartment
bedrooms	1
bathrooms	1
size_sqft	620 ft²
min_to_subway	16 min
floor	1
building_age_yrs	98 (built in 1920)
no_fee	1
has_roofdeck	0
has_washer_dryer	Yas
has_doorman	0
has_elevator	0
has_dishwasher	1
has_patio	1
has_gym	0

# Sonny doesn't have an elevator so the 11th item in the list is a 0
sonny_apartment = [[1, 1, 620, 16, 1, 98, 1, 0, 1, 0, 0, 1, 1, 0]]

predict = mlr.predict(sonny_apartment)

print("Predicted rent: $%.2f" % predict)
The result is:

Predicted rent: $2393.58
And Sonny is only paying $2,000. Yay!